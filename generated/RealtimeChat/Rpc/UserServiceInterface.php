<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: UserService.proto

namespace RealtimeChat\Rpc;

/**
 * Protobuf type <code>realtimeChat.rpc.UserService</code>
 */
interface UserServiceInterface
{
    /**
     * Method <code>findById</code>
     *
     * @param \RealtimeChat\Rpc\FindUserByIdRequest $request
     * @return \RealtimeChat\Rpc\FindUserByIdResponse
     */
    public function findById(\RealtimeChat\Rpc\FindUserByIdRequest $request);

    /**
     * Method <code>findByIds</code>
     *
     * @param \RealtimeChat\Rpc\FindUsersByIdsRequest $request
     * @return \RealtimeChat\Rpc\FindUsersByIdsResponse
     */
    public function findByIds(\RealtimeChat\Rpc\FindUsersByIdsRequest $request);

    /**
     * Method <code>findByEmail</code>
     *
     * @param \RealtimeChat\Rpc\FindUserByEmailRequest $request
     * @return \RealtimeChat\Rpc\FindUserByEmailResponse
     */
    public function findByEmail(\RealtimeChat\Rpc\FindUserByEmailRequest $request);

    /**
     * Method <code>create</code>
     *
     * @param \RealtimeChat\Rpc\CreateUserRequest $request
     * @return \RealtimeChat\Rpc\CreateUserResponse
     */
    public function create(\RealtimeChat\Rpc\CreateUserRequest $request);

    /**
     * Method <code>updateById</code>
     *
     * @param \RealtimeChat\Rpc\UpdateUserByIdRequest $request
     * @return \RealtimeChat\Rpc\UpdateUserByIdResponse
     */
    public function updateById(\RealtimeChat\Rpc\UpdateUserByIdRequest $request);

    /**
     * Method <code>deleteById</code>
     *
     * @param \RealtimeChat\Rpc\DeleteUserByIdRequest $request
     * @return \RealtimeChat\Rpc\DeleteUserByIdResponse
     */
    public function deleteById(\RealtimeChat\Rpc\DeleteUserByIdRequest $request);

    /**
     * Method <code>verifyPassword</code>
     *
     * @param \RealtimeChat\Rpc\VerifyUserPasswordRequest $request
     * @return \RealtimeChat\Rpc\VerifyUserPasswordResponse
     */
    public function verifyPassword(\RealtimeChat\Rpc\VerifyUserPasswordRequest $request);

}

