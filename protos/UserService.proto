syntax = "proto3";

import "models/Status.proto";
import "models/User.proto";

package realtimeChat.rpc;

option php_generic_services = true;

service UserService {
  rpc findById (FindUserByIdRequest) returns (FindUserByIdResponse);
  rpc findByIds (FindUsersByIdsRequest) returns (FindUsersByIdsResponse);
  rpc findByEmail (FindUserByEmailRequest) returns (FindUserByEmailResponse);
  rpc create (CreateUserRequest) returns (CreateUserResponse);
  rpc updateById (UpdateUserByIdRequest) returns (UpdateUserByIdResponse);
  rpc deleteById (DeleteUserByIdRequest) returns (DeleteUserByIdResponse);
  rpc verifyPassword (VerifyUserPasswordRequest) returns (VerifyUserPasswordResponse);
}

message FindUserByIdRequest {
  int32 id = 1;
}

message FindUserByIdResponse {
  realtimeChat.rpc.models.Status status = 1;
  realtimeChat.rpc.models.User data = 2;
}

message FindUsersByIdsRequest {
  repeated int32 id = 1;
}

message FindUsersByIdsResponse {
  realtimeChat.rpc.models.Status status = 1;
  repeated realtimeChat.rpc.models.User data = 2;
}

message FindUserByEmailRequest {
  string email = 1;
}

message FindUserByEmailResponse {
  realtimeChat.rpc.models.Status status = 1;
  realtimeChat.rpc.models.User data = 2;
}

message CreateUserRequest {
  string first_name = 1;
  string last_name = 2;
  string email = 3;
  string password = 4;
}

message CreateUserResponse {
  realtimeChat.rpc.models.Status status = 1;
  realtimeChat.rpc.models.User data = 2;
}

message UpdateUserByIdRequest {
  int32 id = 1;
  string first_name = 2;
  string last_name = 3;
  string email = 4;
  string password = 5;
}

message UpdateUserByIdResponse {
  realtimeChat.rpc.models.Status status = 1;
  realtimeChat.rpc.models.User data = 2;
}

message DeleteUserByIdRequest {
  int32 id = 1;
}

message DeleteUserByIdResponse {
  realtimeChat.rpc.models.Status status = 1;
}

message VerifyUserPasswordRequest {
  string email = 1;
  string password = 2;
}

message VerifyUserPasswordResponse {
  realtimeChat.rpc.models.Status status = 1;
}